<script src="~/js/moment.min.js" type="text/javascript"></script>
<script>
    //Variáveis
    participante_default = {
        op_part_id: 0,
        op_part_nome: '',
        op_part_tipo: '',
        op_part_cnpj_cpf: '',
        op_part_cep: '',
        op_part_cidade: '',
        op_part_bairro: '',
        op_part_logradouro: '',
        op_part_numero: '',
        op_part_complemento: '',
        op_paisesIBGE_codigo: 0,
        op_uf_ibge_codigo: 0,
        op_part_participante_id: 0,
        existe: false,
        controleEdit: '',
    };

    retencoes_default = {
        op_ret_id: '',
        op_ret_pis: '',
        op_ret_cofins: '',
        op_ret_csll: '',
        op_ret_irrf: '',
        op_ret_inss: '',
        op_ret_issqn: '',
        existe: false,
    };

    transportador_default = {
        op_transportador_id: 0,
        op_transportador_nome: '',
        op_transportador_cnpj_cpf: '',
        op_transportador_modalidade_frete: '',
        op_transportador_volume_qtd: 0,
        op_transportador_volume_peso_bruto: 0,
        op_transportador_participante_id: 0,
        existe: false,
    };

    nf_default = {
        op_nf_id: 0,
        op_nf_op_id: 0,
        op_nf_chave: '',
        op_nf_data_emissao: '',
        op_nf_data_entrada_saida: '',
        op_nf_serie: '',
        op_nf_numero: '',
        existe: false,
    };

    servico_default = {
        op_servico_id: 0,
        op_servico_op_id: 0,
        op_servico_equipamento: '',
        op_servico_nSerie: '',
        op_servico_problema: '',
        op_servico_obsReceb: '',
        op_servico_servico_executado: '',
        op_servico_valor: '',
        op_servico_status: '',
        op_servico_lc116: '',
    };

    parcela = {
        op_parcela_id: 0,
        op_parcela_dias: 0,
        op_parcela_vencimento: '',
        op_parcela_fp_id: 0,
        op_parcela_op_id: 0,
        op_parcela_valor: '',
        op_parcela_obs: '',
        op_parcela_saldo: '',
        op_parcela_ret_inss: '',
        op_parcela_ret_issqn: '',
        op_parcela_ret_irrf: '',
        op_parcela_ret_pis: '',
        op_parcela_ret_cofins: '',
        op_parcela_ret_csll: '',
        op_parcela_valor_bruto: '',
        op_parcela_agrupamento: 0,
        op_parcela_vencimento_alterado: '',
        op_parcela_numero: 0,
        op_parcela_numero_total: 0,
        op_parcela_label_forma_pgto: '',
    };

    //Funcções
    function change_op_tipo(id, vlr, contexto) {
        let s = convertStringDouble(operacao.servico.op_servico_valor);
        let p = operacao.itens.length;

        if (s > 0 || p > 0) {
            let up = '<button type="button" class="btn btn-danger" onclick="change_op_tipo(\'' + id + '\', \'' + vlr + '\',\'confirmado\')">Alterar</button>';
            let del = '<button type="button" class="btn btn-secondary" onclick="change_op_tipo(\'' + id + '\', \'' + vlr + '\',\'nao_confirmado\')">Cancelar</button>';

            if (contexto == 'confirmar') {
                if (document.getElementById('footer_update_especie')) {
                    document.getElementById('footer_update_especie').innerHTML = '';
                    $('#footer_update_especie').append(up);
                    $('#footer_update_especie').append(del);
                }
                //Abre modal
                modal_sobre_modal_open('modal_update_especie');
            }

            if (contexto == 'nao_confirmado') {
                if (document.getElementById('footer_update_especie')) {
                    document.getElementById('footer_update_especie').innerHTML = '';
                    $('#footer_update_especie').append(up);
                    $('#footer_update_especie').append(del);
                }

                document.getElementById('op_tipo').value = operacao.operacao.op_tipo;

                $('#modal_update_especie').modal('hide');
            }
        } else {
            contexto = 'confirmado';
        }

        if (contexto == 'confirmado') {

            $('#modal_update_especie').modal('hide');

            if (vlr == 'Compra' || vlr == 'Venda') { //Compra/Venda Produtos
                document.getElementById('itens_operacao').style.display = 'block';
                document.getElementById('servico_operacao').style.display = 'none';
                document.getElementById('outros_operacao').style.display = 'none';

                document.getElementById('totais_servico').style.display = 'none';
                document.getElementById('totais_itens').style.display = 'block';

                //Retorna serviços a defoult
                retornaServicoDefault();
                totaisOperacao();
            }
            if (vlr == 'ServicoPrestado' || vlr == 'ServicoTomado') { //Serviços
                document.getElementById('itens_operacao').style.display = 'none';
                document.getElementById('servico_operacao').style.display = 'block';
                document.getElementById('outros_operacao').style.display = 'none';

                document.getElementById('totais_servico').style.display = 'block';
                document.getElementById('totais_itens').style.display = 'none';

                //Remove os itens da operação
                excluirTodosItensOperacao();                
            }
            if (vlr == 'OutrasDespesas' || vlr == 'OutrasReceitas') {//Outros
                document.getElementById('itens_operacao').style.display = 'none';
                document.getElementById('servico_operacao').style.display = 'none';
                document.getElementById('outros_operacao').style.display = 'block';

                document.getElementById('totais_servico').style.display = 'none';
                document.getElementById('totais_itens').style.display = 'none';

                //Remove os itens da operação
                excluirTodosItensOperacao();
                //Retorna serviços a defoult
                retornaServicoDefault();                
            }
            operacao.operacao.op_tipo = vlr;

            //Produzindo selects categoria e forma de pagamento contextualizada ao tipo op.
            GerarFormaPgto(vlr, 'op_parcela_fp_id');            
            GerarFormaPgto(vlr, 'op_parcela_fp_id_edit');            

            GerarCategorias(vlr, 'op_categoria_id');
            $("#op_categoria_id").select2({
                placeholder: "Selecione uma categoria...",
                allowClear: true
            });
        }
    }

    function excluirTodosItensOperacao() { //Exclui todos os itens da matriz de itens de operação.itens.
        operacao.itens.splice(0, operacao.itens.length);
        document.getElementById('itens').value = 'Não informado';

        totaisOperacao();
    }

    function retornaServicoDefault() {
        operacao.servico.op_servico_valor = 0;
        operacao.servico.op_servico_servico_executado = '';
        operacao.servico.op_servico_lc116 = '';
        document.getElementById('op_servico_valor').value = 0,00;
        document.getElementById('op_servico_servico_executado').value = '';
        document.getElementById('op_servico_lc116').value = '';
        
        document.getElementById('servicos').value = 'Não informado';

        totaisOperacao();
    }

    function gravar_servico_operacao() {
        operacao.servico.op_servico_servico_executado = document.getElementById('op_servico_servico_executado').value;
        operacao.servico.op_servico_lc116 = document.getElementById('op_servico_lc116').value;
        operacao.servico.op_servico_valor = document.getElementById('op_servico_valor').value.toLocaleString("pt-BR", { style: "decimal", minimumFractionDigits: "2", maximumFractionDigits: "2" });

        document.getElementById('servicos').value = 'LC 116/2003: ' + operacao.servico.op_servico_lc116 + ' | Valor: ' + operacao.servico.op_servico_valor;

        totaisOperacao();

        $('#m_servico').modal('hide');
    }

    function gravarDadosParticipante(contexto, op_part_participante_id) {
        dadorParticipante(contexto, op_part_participante_id)

        if (document.getElementById('participante')) {
            document.getElementById('participante').value = operacao.participante.op_part_nome;
        }

        if (document.getElementById('modal_participante')) {
            $('#modal_participante').modal('hide');
        }
    }

    function operacao_participante(contexto) {
        if (contexto == 'open') {
            if (document.getElementById('nome')) {
                document.getElementById('nome').value = operacao.participante.op_part_nome;
            }
            if (document.getElementById('participante_tipoPessoa')) {
                document.getElementById('participante_tipoPessoa').value = operacao.participante.op_part_tipo;
            }
            if (document.getElementById('op_part_cnpj_cpf')) {
                document.getElementById('op_part_cnpj_cpf').value = operacao.participante.op_part_cnpj_cpf;
            }
            if (document.getElementById('cep')) {
                document.getElementById('cep').value = operacao.participante.op_part_cep;
            }
            if (document.getElementById('rua')) {
                document.getElementById('rua').value = operacao.participante.op_part_logradouro;
            }
            if (document.getElementById('numero')) {
                document.getElementById('numero').value = operacao.participante.op_part_numero;
            }
            if (document.getElementById('complemento')) {
                document.getElementById('complemento').value = operacao.participante.op_part_complemento;
            }
            if (document.getElementById('bairro')) {
                document.getElementById('bairro').value = operacao.participante.op_part_bairro;
            }
            if (document.getElementById('cidade')) {
                document.getElementById('cidade').value = operacao.participante.op_part_cidade;
            }
            if (document.getElementById('uf')) {
                document.getElementById('uf').value = operacao.participante.op_uf_ibge_codigo;
            }
            if (document.getElementById('op_paisesIBGE_codigo')) {
                document.getElementById('op_paisesIBGE_codigo').value = operacao.participante.op_paisesIBGE_codigo;
            }

            //Abre modal
            modal_sobre_modal_open('modal_participante');            
        }

        if (contexto == 'save') {

            if (operacao.op_part_participante_id != 0) {
                if (document.getElementById('nome')) {
                    operacao.participante.op_part_nome = document.getElementById('nome').value;
                }
                if (document.getElementById('participante_tipoPessoa')) {
                    operacao.participante.op_part_tipo = document.getElementById('participante_tipoPessoa').value;
                }
                if (document.getElementById('op_part_cnpj_cpf')) {
                    operacao.participante.op_part_cnpj_cpf = document.getElementById('op_part_cnpj_cpf').value;
                }
                if (document.getElementById('cep')) {
                    operacao.participante.op_part_cep = document.getElementById('cep').value;
                }
                if (document.getElementById('rua')) {
                    operacao.participante.op_part_logradouro = document.getElementById('rua').value;
                }
                if (document.getElementById('numero')) {
                    operacao.participante.op_part_numero = document.getElementById('numero').value;
                }
                if (document.getElementById('complemento')) {
                    operacao.participante.op_part_complemento = document.getElementById('complemento').value;
                }
                if (document.getElementById('bairro')) {
                    operacao.participante.op_part_bairro = document.getElementById('bairro').value;
                }
                if (document.getElementById('cidade')) {
                    operacao.participante.op_part_cidade = document.getElementById('cidade').value;
                }
                if (document.getElementById('uf')) {
                    operacao.participante.op_uf_ibge_codigo = document.getElementById('uf').value;
                }
                if (document.getElementById('op_paisesIBGE_codigo')) {
                    operacao.participante.op_paisesIBGE_codigo = document.getElementById('op_paisesIBGE_codigo').value;
                }

                document.getElementById('participante').value = operacao.participante.op_part_nome;
                if (document.getElementById('modal_participante')) {
                    $('#modal_participante').modal('hide');
                }
            }
        }

        if (contexto == 'delete') {
            operacao.participante = participante_default;
            document.getElementById('participante').value = 'Não informado';
            //Limpa campos do modal
            document.getElementById('nome').value = '';
            document.getElementById('participante_tipoPessoa').value = 1;
            document.getElementById('op_part_cnpj_cpf').value = '';
            document.getElementById('cep').value = '';
            document.getElementById('rua').value = '';
            document.getElementById('numero').value = '';
            document.getElementById('complemento').value = '';
            document.getElementById('bairro').value = '';
            document.getElementById('cidade').value = '';
            document.getElementById('uf').value = 35;
            document.getElementById('op_paisesIBGE_codigo').value = 1058;
            //Fechando modal
            if (document.getElementById('modal_participante')) {
                $('#modal_participante').modal('hide');
            }
        }
    }

    function changeUFParticipante(id, vlr, contexto) {
        if (contexto == 'uf') {
            if (vlr == 0) {                          
                document.getElementById('op_paisesIBGE_codigo').removeAttribute("readonly");
            } else {                
                document.getElementById('op_paisesIBGE_codigo').setAttribute("readonly", "readonly");
                document.getElementById('op_paisesIBGE_codigo').value = '1058';
            }
        }
        if (contexto == 'pais') {
            let uf = document.getElementById('uf').value;
            if (uf != 0) {
                document.getElementById('op_paisesIBGE_codigo').value = '1058';
            }
        }
    }

    
    function operacao_itens(contexto) {
        if (contexto == 'open') {            
            //Atualiza tabela de itens
            atualizaViewItens();            
            //Abrir modal
            modal_sobre_modal_open('lista_itens');
        }

        if (contexto == 'close') {
            if (operacao.itens.length > 0) {
                document.getElementById('itens').value = 'Quantidade de Itens Informado: ' + operacao.itens.length;
            } else {
                document.getElementById('itens').value = 'Não informado';
            }
            
        }

        if (contexto == 'save') {
            let id = document.getElementById('produto_id').value;
            let prod_descricao = document.getElementById('prod_descricao').value;
            let prod_codigo = document.getElementById('prod_codigo').value;
            let prod_valor = document.getElementById('prod_valor').value;
            let prod_quantidade = document.getElementById('prod_quantidade').value;
            let prod_valorTotal = document.getElementById('prod_valorTotal').value;
            let prod_unidade = document.getElementById('unidade').value;

            if (id > 0) {
                document.getElementById('produto_id').value = 0;
                document.getElementById('prod_descricao').value = "";
                document.getElementById('prod_codigo').value = "";
                document.getElementById('prod_valor').value = "";
                document.getElementById('prod_quantidade').value = "";
                document.getElementById('prod_valorTotal').value = "";

                let numero_controle = id + Math.floor(Math.random() * 100000) + 1;

                if (isNaN((prod_valor.toString().replace('.', '').replace(',', '.') * 1)) || isNaN((prod_quantidade.toString().replace('.', '').replace(',', '.') * 1)) || isNaN((prod_valorTotal.toString().replace('.', '').replace(',', '.') * 1))) {
                    alert('Valor incorreto no valor unitário, quantidade ou total do item');
                    document.getElementById('prod_descricao').focus();
                } else {
                    let item_produto = {
                        op_item_numero_controle: numero_controle, //id é o produto_id selecionado. Adicionaod ao objeto para fins de controle (localiza-lo no momento da edição dos dados);
                        op_item_produto_id: id,
                        op_item_id: numero_controle,
                        op_item_codigo: prod_codigo,
                        op_item_nome: prod_descricao,
                        op_item_unidade: prod_unidade,
                        op_item_preco: prod_valor,
                        op_item_gtin_ean: '',
                        op_item_gtin_ean_trib: '',
                        op_item_obs: '',
                        op_item_qtd: prod_quantidade,
                        op_item_frete: '0,00',
                        op_item_seguros: '0,00',
                        op_item_desp_aces: '0,00',
                        op_item_desconto: '0,00',
                        op_item_vlr_ipi: '0,00',
                        op_item_vlr_icms_st: '0,00',
                        op_item_cod_fornecedor: '',
                        op_item_valor_total: prod_valorTotal,
                        controleEdit: 'insert',
                        op_item_id_banco: 0,
                    };
                    operacao.itens.push(item_produto);
                                        
                    //Atualiza tabela de itens
                    atualizaViewItens();                    

                    //Inserindo em totais total de itens
                    operacao.totais.op_totais_itens += 1;

                    //Inserindo em totais a soma das quantidades totais
                    let qtd_total = (operacao.totais.op_totais_qtd_itens.toString().replace('.', '').replace(',', '.') * 1) + (prod_quantidade.toString().replace('.', '').replace(',', '.') * 1);
                    operacao.totais.op_totais_qtd_itens = qtd_total.toLocaleString("pt-BR", { style: "decimal", minimumFractionDigits: "2", maximumFractionDigits: "6" });

                    document.getElementById('prod_descricao').focus();

                    //totaisOperacao();
                }

            } else {
                document.getElementById('prod_descricao').focus();
            }
        }

        totaisOperacao();
    }

    function operacao_item(contexto, op_item_numero_controle) {

        let item = operacao.itens.find(item => item.op_item_numero_controle == op_item_numero_controle);       

        if (contexto == 'edit') {   
            document.getElementById('op_item_numero_controle_edicao_item').value = item.op_item_numero_controle;
            document.getElementById('op_item_nome').value = item.op_item_nome;
            document.getElementById('op_item_codigo').value = item.op_item_codigo;
            document.getElementById('op_item_cod_fornecedor').value = item.op_item_cod_fornecedor;
            document.getElementById('op_item_unidade').value = item.op_item_unidade;
            decimal('op_item_preco', item.op_item_preco.toString().replace('.', ''), '6', true);
            decimal('op_item_qtd', item.op_item_qtd.toString().replace('.', ''), '6', true);
            decimal('item_valor_total', item.op_item_valor_total.toString().replace('.', ''), '6', true);
            decimal('op_item_frete', item.op_item_frete.toString().replace('.', ''), '6', true);
            decimal('op_item_seguros', item.op_item_seguros.toString().replace('.', ''), '6', true);
            decimal('op_item_desp_aces', item.op_item_desp_aces.toString().replace('.', ''), '6', true);
            decimal('op_item_desconto', item.op_item_desconto.toString().replace('.', ''), '6', true);
            decimal('op_item_vlr_ipi', item.op_item_vlr_ipi.toString().replace('.', ''), '6', true);
            decimal('op_item_vlr_icms_st', item.op_item_vlr_icms_st.toString().replace('.', ''), '6', true);

            //Abrir modal
            modal_sobre_modal_open('modal_item');
        }

        if (contexto == 'delete_confirmar') {
            document.getElementById('item_excluir').innerHTML = 'Confirma a exclusão do item: ' + item.op_item_nome + '?';
            document.getElementById('item_delete').value = item.op_item_numero_controle;
            //Abrir modal
            modal_sobre_modal_open('modal_item_delete');
        }

        if (contexto == 'delete_confirmado') {
            let codigo = document.getElementById('item_delete').value;            

            for (let i = 0; i < operacao.itens.length; i++) {
                if (operacao.itens[i].op_item_numero_controle == codigo) {
                    if (operacao.itens[i].controleEdit == 'update') {
                        //altera o status de controleEdit para enviar ao servidor para excluir no banco;
                        operacao.itens[i].controleEdit = 'delete';
                    } else {
                        //remove item do objeto operacao da matriz itens
                        operacao.itens.splice(i, 1);
                    }
                }
            }

            //Atualiza tabela de itens
            atualizaViewItens();

            //Fecha modal de confirmação
            $('#modal_item_delete').modal('hide');
        }

        if (contexto == 'save') {
            let op_item_numero_controle = document.getElementById('op_item_numero_controle_edicao_item').value * 1;

            for (let i = 0; i < operacao.itens.length; i++) {
                if (operacao.itens[i].op_item_numero_controle == op_item_numero_controle) {
                    //atualiza objeto
                    operacao.itens[i].op_item_codigo = document.getElementById('op_item_codigo').value;
                    operacao.itens[i].op_item_nome = document.getElementById('op_item_nome').value;
                    operacao.itens[i].op_item_unidade = document.getElementById('op_item_unidade').value;
                    operacao.itens[i].op_item_preco = document.getElementById('op_item_preco').value;
                    operacao.itens[i].op_item_qtd = document.getElementById('op_item_qtd').value;
                    operacao.itens[i].op_item_frete = document.getElementById('op_item_frete').value;
                    operacao.itens[i].op_item_seguros = document.getElementById('op_item_seguros').value;
                    operacao.itens[i].op_item_desp_aces = document.getElementById('op_item_desp_aces').value;
                    operacao.itens[i].op_item_desconto = document.getElementById('op_item_desconto').value;
                    operacao.itens[i].op_item_vlr_ipi = document.getElementById('op_item_vlr_ipi').value;
                    operacao.itens[i].op_item_vlr_icms_st = document.getElementById('op_item_vlr_icms_st').value;
                    operacao.itens[i].op_item_cod_fornecedor = document.getElementById('op_item_cod_fornecedor').value;
                    operacao.itens[i].op_item_valor_total = document.getElementById('item_valor_total').value;
                    //Atualiza tabela de itens
                    atualizaViewItens();
                    //calcula os totais
                    //totaisOperacao();
                    break;
                }
            }
            $('#modal_item').modal('hide');
        }

        totaisOperacao();
    }

    function atualizaViewItens() {
        document.getElementById('tbody_itens').innerHTML = '';
        for (let i = 0; i < operacao.itens.length; i++) {
            item = '';
            item += '<tr>';
            item += '<td>';
            item += '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16" style="cursor:pointer;" onclick="operacao_item(\'edit\',\'' + operacao.itens[i].op_item_numero_controle + '\')">';
            item += '<path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />';
            item += '<path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z" />';
            item += '</svg>';
            item += '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16" style="cursor:pointer;" onclick="operacao_item(\'delete_confirmar\',\'' + operacao.itens[i].op_item_numero_controle + '\')">';
            item += '<path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />';
            item += '<path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" />';
            item += '</svg>';
            item += '</td>';
            item += '<td>' + operacao.itens[i].op_item_nome + '</td>';
            item += '<td>' + operacao.itens[i].op_item_codigo + '</td>';
            item += '<td>' + operacao.itens[i].op_item_qtd + '</td>';
            item += '<td>' + operacao.itens[i].op_item_preco + '</td>';
            item += '<td>' + operacao.itens[i].op_item_valor_total + '</td>';
            item += '<td>' + 'NCM' + '</td>';
            item += '<td>' + 'CEST' + '</td>';
            item += '</tr>';
            $('#tbody_itens').append(item);
        }
    }

    function operacao_servico(contexto) {
        if (contexto == 'open') {
            document.getElementById('op_servico_servico_executado').value = operacao.servico.op_servico_servico_executado;
            document.getElementById('op_servico_valor').value = operacao.servico.op_servico_valor.toLocaleString("pt-BR", { style: "decimal", minimumFractionDigits: "2", maximumFractionDigits: "6" });
            document.getElementById('op_servico_lc116').value = operacao.servico.op_servico_lc116;

            //Abrir modal
            modal_sobre_modal_open('m_servico');
        }

        if (contexto == 'save') {

            let vlr = document.getElementById('op_servico_valor').value.toString().replace('.', '').replace(',', '.') * 1;

            if (vlr == 0) {
                document.getElementById('servicos').value = 'Não informado';
                document.getElementById('servico_val').innerHTML = 'Informe um valor para o serviço!';
            }

            if (vlr > 0) {
                document.getElementById('servico_val').innerHTML = '';

                operacao.servico.op_servico_servico_executado = document.getElementById('op_servico_servico_executado').value;
                operacao.servico.op_servico_valor = document.getElementById('op_servico_valor').value.toLocaleString("pt-BR", { style: "decimal", minimumFractionDigits: "2", maximumFractionDigits: "6" });
                operacao.servico.op_servico_lc116 = document.getElementById('op_servico_lc116').value;

                document.getElementById('servicos').value = 'Valor do Serviço Informado: ' + operacao.servico.op_servico_valor.toLocaleString("pt-BR", { style: "decimal", minimumFractionDigits: "2", maximumFractionDigits: "6" });

                //Fecha modal
                $('#m_servico').modal('hide');
            }            
        }

        if (contexto == 'delete') {
            retornaServicoDefault();
            document.getElementById('servicos').value = 'Não informado';
            //Fecha modal
            $('#m_servico').modal('hide');
        }

        totaisOperacao();
    }

    function operacao_retencoes(contexto) {
        if (contexto == 'open') {
            decimal('op_ret_inss', operacao.retencoes.op_ret_inss, '2', false);
            decimal('op_ret_irrf', operacao.retencoes.op_ret_irrf, '2', false);
            decimal('op_ret_issqn', operacao.retencoes.op_ret_issqn, '2', false);
            decimal('op_ret_pis', operacao.retencoes.op_ret_pis, '2', false);
            decimal('op_ret_cofins', operacao.retencoes.op_ret_cofins, '2', false);
            decimal('op_ret_csll', operacao.retencoes.op_ret_csll, '2', false);

            //Abrir modal
            modal_sobre_modal_open('m_retencoes');
        }
        if (contexto == 'save') {
            operacao.retencoes.op_ret_inss = document.getElementById('op_ret_inss').value;
            operacao.retencoes.op_ret_issqn = document.getElementById('op_ret_issqn').value;
            operacao.retencoes.op_ret_irrf = document.getElementById('op_ret_irrf').value;

            let txt = '';
            let soma = 0;

            if (convertStringDouble(operacao.retencoes.op_ret_inss) > 0) {
                txt += 'INSS: ' + operacao.retencoes.op_ret_inss + ' ';
                soma += convertStringDouble(operacao.retencoes.op_ret_inss);
            }
            if (convertStringDouble(operacao.retencoes.op_ret_issqn) > 0) {
                txt += 'ISSQN: ' + operacao.retencoes.op_ret_issqn + ' ';
                soma += convertStringDouble(operacao.retencoes.op_ret_issqn);
            }
            if (convertStringDouble(operacao.retencoes.op_ret_irrf) > 0) {
                txt += 'IRRF: ' + operacao.retencoes.op_ret_irrf + ' ';
                soma += convertStringDouble(operacao.retencoes.op_ret_irrf);
            }
            if (convertStringDouble(operacao.retencoes.op_ret_pis) > 0) {
                txt += 'PIS: ' + operacao.retencoes.op_ret_pis + ' ';
                soma += convertStringDouble(operacao.retencoes.op_ret_pis);
            }
            if (convertStringDouble(operacao.retencoes.op_ret_cofins) > 0) {
                txt += 'COFINS: ' + operacao.retencoes.op_ret_cofins + ' ';
                soma += convertStringDouble(operacao.retencoes.op_ret_cofins);
            }
            if (convertStringDouble(operacao.retencoes.op_ret_csll) > 0) {
                txt += 'CSLL: ' + operacao.retencoes.op_ret_csll + ' ';
                soma += convertStringDouble(operacao.retencoes.op_ret_csll);
            }

            if (soma > 0) {
                document.getElementById('retencoes').value = txt;
            } else {
                document.getElementById('retencoes').value = 'Não informado';
            }

            //Fecha modal
            $('#m_retencoes').modal('hide');
        }
    }

    function convertStringDouble(vlr) {
        let valor = vlr.toString().replace('.', '').replace(',', '.') * 1;

        return valor;
    }

    function operacao_totais(contexto) {
        if (contexto == 'open') {

            //Abrir modal
            modal_sobre_modal_open('m_totais');
        }
    }

    function GerarFormaPgto(op_tipo, select_id) {
        $.ajax({
            url: "/Operacao/GerarFormaPgto",
            data: { __RequestVerificationToken: gettoken(), op_tipo: op_tipo },
            type: 'POST',
            dataType: 'json',
            beforeSend: function (XMLHttpRequest) {
                /*if (document.getElementById('text_formaPgto')) {
                    document.getElementById('text_formaPgto').innerHTML = "Gerando lista de formas de pagamento";
                    if (document.getElementById('sub')) {
                        document.getElementById('sub').setAttribute("disabled", "disabled");
                    }
                }*/
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert("erro");
            },
            success: function (data, textStatus, XMLHttpRequest) {
                var results = JSON.parse(data);
                $('#' + select_id).children('option').remove(); //Remove todos os itens do select

                for (i = 0; i < results.length; i++) { //Adiciona os item recebidos no results no select
                    $('#' + select_id).append($("<option></option>").attr("value", results[i].value).text(results[i].text));
                }

                /*if (document.getElementById('text_formaPgto')) {
                    document.getElementById('text_formaPgto').innerHTML = "";
                    if (document.getElementById('sub')) {
                        document.getElementById('sub').removeAttribute("disabled");
                    }
                }*/
            }
        });
    }

    function GerarCategorias(op_tipo, select_id) {
        $.ajax({
            url: "/Operacao/GerarCategorias",
            data: { __RequestVerificationToken: gettoken(), op_tipo: op_tipo },
            type: 'POST',
            dataType: 'json',
            beforeSend: function (XMLHttpRequest) {
                if (document.getElementById('text_categorias')) {
                    document.getElementById('text_categorias').innerHTML = "Gerando categorias...";
                    if (document.getElementById('sub')) {
                        document.getElementById('sub').setAttribute("disabled", "disabled");
                    }
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert("erro");
            },
            success: function (data, textStatus, XMLHttpRequest) {
                var results = JSON.parse(data);
                $('#' + select_id).children('option').remove(); //Remove todos os itens do select

                for (i = 0; i < results.length; i++) { //Adiciona os item recebidos no results no select
                    $('#' + select_id).append($("<option></option>").attr("value", results[i].value).text(results[i].text));
                }
                if (document.getElementById('text_categorias')) {
                    document.getElementById('text_categorias').innerHTML = "";
                    if (document.getElementById('sub')) {
                        document.getElementById('sub').removeAttribute("disabled");
                    }
                }
            }
        });
    }

    function formaGerarParcelas(id, vlr) {
        if (vlr == 1) {
            document.getElementById('diaVencimento').style.display = 'block';
            document.getElementById('dataIncio_Fim').style.display = 'none';
            document.getElementById('numeroParcelas').style.display = 'none';
        }

        if (vlr == 2) {
            document.getElementById('diaVencimento').style.display = 'none';
            document.getElementById('dataIncio_Fim').style.display = 'block';
            document.getElementById('numeroParcelas').style.display = 'none';
        }

        if (vlr == 3) {
            document.getElementById('diaVencimento').style.display = 'none';
            document.getElementById('dataIncio_Fim').style.display = 'none';
            document.getElementById('numeroParcelas').style.display = 'block';
        }
    }

    function changeNumeroParcelas(id, vlr) {
        let i = parseInt(vlr.toString(), 10);
        i = i.toString().replace('-', '').replace('+', '').replace('.', '').replace(',', '');
        document.getElementById(id).value = i;
    }

    function atualizaViewParcelas() {
        document.getElementById('tbody_parcelas').innerHTML = '';
        for (let i = 0; i < operacao.parcelas.length; i++) {
            item = '';
            item += '<tr>';
            item += '<td>';
            item += '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16" style="cursor:pointer;" onclick="operacao_parcelas(\'edit_open\',\'' + operacao.parcelas[i].op_parcela_numero + '\')">';
            item += '<path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />';
            item += '<path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z" />';
            item += '</svg>';
            item += '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16" style="cursor:pointer;" onclick="operacao_parcelas(\'delete_confirmar\',\'' + operacao.parcelas[i].op_parcela_numero + '\')">';
            item += '<path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />';
            item += '<path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" />';
            item += '</svg>';
            item += '</td>';
            item += '<td>' + operacao.parcelas[i].op_parcela_vencimento + '</td>';
            item += '<td>' + operacao.parcelas[i].op_parcela_valor_bruto + '</td>';
            item += '<td>' + operacao.parcelas[i].op_parcela_valor + '</td>';
            item += '<td style="white-space:nowrap">' + operacao.parcelas[i].op_parcela_label_forma_pgto + '</td>';
            item += '<td>' + operacao.parcelas[i].op_parcela_ret_irrf + '</td>';
            item += '<td>' + operacao.parcelas[i].op_parcela_ret_inss + '</td>';
            item += '<td>' + operacao.parcelas[i].op_parcela_ret_issqn + '</td>';
            item += '<td>' + operacao.parcelas[i].op_parcela_ret_pis + '</td>';
            item += '<td>' + operacao.parcelas[i].op_parcela_ret_cofins + '</td>';
            item += '<td>' + operacao.parcelas[i].op_parcela_ret_csll + '</td>';
            item += '<td style="white-space:nowrap">' + operacao.parcelas[i].op_parcela_obs + '</td>';            
            item += '</tr>';
            $('#tbody_parcelas').append(item);
        }
    }

    function operacao_parcelas(contexto, op_parcela_numero) {
        if (contexto == 'open') {
            //Atualiza a view com as parcelas
            atualizaViewParcelas();
            //Abrir modal
            modal_sobre_modal_open('lista_parcelas');
        }

        if (contexto == 'gerar') {
            let forma_gerar_parcelas = convertStringDouble(document.getElementById('parcela_forma_gerar').value);           

            if (forma_gerar_parcelas == 1) {
                gera_parcelas_dia_vencimento();
                atualizaViewParcelas();
            }

            if (forma_gerar_parcelas == 3) {                
                gera_parcelas_numero_parcelas();
                atualizaViewParcelas();
            }
        }

        if (contexto == 'edit_open') {
            for (let i = 0; i < operacao.parcelas.length; i++) {
                if (operacao.parcelas[i].op_parcela_numero == op_parcela_numero) {
                    document.getElementById('op_parcela_vencimento').value = operacao.parcelas[i].op_parcela_vencimento;
                    document.getElementById('op_parcela_valor_bruto').value = operacao.parcelas[i].op_parcela_valor_bruto;
                    document.getElementById('op_parcela_valor').value = operacao.parcelas[i].op_parcela_valor;
                    document.getElementById('op_parcela_ret_irrf').value = operacao.parcelas[i].op_parcela_ret_irrf;
                    document.getElementById('op_parcela_ret_inss').value = operacao.parcelas[i].op_parcela_ret_inss;
                    document.getElementById('op_parcela_ret_issqn').value = operacao.parcelas[i].op_parcela_ret_issqn;
                    document.getElementById('op_parcela_ret_pis').value = operacao.parcelas[i].op_parcela_ret_pis;
                    document.getElementById('op_parcela_ret_cofins').value = operacao.parcelas[i].op_parcela_ret_cofins;
                    document.getElementById('op_parcela_ret_csll').value = operacao.parcelas[i].op_parcela_ret_csll;
                    document.getElementById('op_parcela_obs').value = operacao.parcelas[i].op_parcela_obs;
                    document.getElementById('op_parcela_numero').value = operacao.parcelas[i].op_parcela_numero;
                    //Atribuindo a categoria no select2
                    if (document.getElementById('op_parcela_fp_id_edit')) {
                        $('#op_parcela_fp_id_edit').val(operacao.parcelas[i].op_parcela_fp_id);
                        $('#op_parcela_fp_id_edit').trigger('change');
                    }

                    document.getElementById('btn_action').innerHTML = '<button type="button" id="btn_parcela" class="btn btn-sm btn-info" style="width:100%;" onclick="operacao_parcelas(\'gravar\')">Gravar Alteração</button>';

                    break;
                }
            }

            //Habilita tab 2 na tela
            $('#myTab li:nth-child(2) a').tab('show')
        }

        if (contexto == 'gravar') {
            let op_parcela_vencimento = moment(document.getElementById('op_parcela_vencimento').value, 'DD/MM/YYYY', 'pt', true);
            if (op_parcela_vencimento.isValid() && convertStringDouble(document.getElementById('op_parcela_valor_bruto').value) > 0 && convertStringDouble(document.getElementById('op_parcela_fp_id_edit').value) > 0) {
                let op_parcela_numero = convertStringDouble(document.getElementById('op_parcela_numero').value);
                for (let i = 0; i < operacao.parcelas.length; i++) {
                    if (operacao.parcelas[i].op_parcela_numero == op_parcela_numero) {
                        operacao.parcelas[i].op_parcela_vencimento = document.getElementById('op_parcela_vencimento').value;
                        operacao.parcelas[i].op_parcela_valor_bruto = document.getElementById('op_parcela_valor_bruto').value;
                        operacao.parcelas[i].op_parcela_valor = document.getElementById('op_parcela_valor').value;
                        operacao.parcelas[i].op_parcela_ret_irrf = document.getElementById('op_parcela_ret_irrf').value;
                        operacao.parcelas[i].op_parcela_ret_inss = document.getElementById('op_parcela_ret_inss').value;
                        operacao.parcelas[i].op_parcela_ret_issqn = document.getElementById('op_parcela_ret_issqn').value;
                        operacao.parcelas[i].op_parcela_ret_pis = document.getElementById('op_parcela_ret_pis').value;
                        operacao.parcelas[i].op_parcela_ret_cofins = document.getElementById('op_parcela_ret_cofins').value;
                        operacao.parcelas[i].op_parcela_ret_csll = document.getElementById('op_parcela_ret_csll').value;
                        operacao.parcelas[i].op_parcela_obs = document.getElementById('op_parcela_obs').value;
                        operacao.parcelas[i].op_parcela_fp_id = document.getElementById('op_parcela_fp_id_edit').value;
                        operacao.parcelas[i].op_parcela_label_forma_pgto = $('#op_parcela_fp_id_edit :selected').text();

                        //Limpando campos da tela
                        document.getElementById('op_parcela_vencimento').value = '';
                        document.getElementById('op_parcela_valor_bruto').value = '';
                        document.getElementById('op_parcela_valor').value = '';
                        document.getElementById('op_parcela_ret_irrf').value = '';
                        document.getElementById('op_parcela_ret_inss').value = '';
                        document.getElementById('op_parcela_ret_issqn').value = '';
                        document.getElementById('op_parcela_ret_pis').value = '';
                        document.getElementById('op_parcela_ret_cofins').value = '';
                        document.getElementById('op_parcela_ret_csll').value = '';
                        document.getElementById('op_parcela_obs').value = '';
                        document.getElementById('op_parcela_numero').value = '';

                        //altera value do btn da tela
                        document.getElementById('btn_action').innerHTML = '<button type="button" id="btn_parcela" class="btn btn-sm btn-outline-info" style="width:100%;" onclick="operacao_parcelas(\'incluir\')">Incluir Parcela</button>';

                        break;
                    }
                }
                atualizaViewParcelas();
            } else {
                alert('Data de Vencimento ou Valor Bruto são inválidos!');
            }
        }

        if (contexto == 'incluir') {
            let op_data = moment(document.getElementById('op_data').value, 'DD/MM/YYYY', 'pt', true);
            let op_parcela_vencimento = moment(document.getElementById('op_parcela_vencimento').value, 'DD/MM/YYYY', 'pt', true);
            let duracao = moment.duration(op_data.diff(op_parcela_vencimento));
            let dias = duracao.asDays();

            if (op_parcela_vencimento.isValid() && convertStringDouble(document.getElementById('op_parcela_valor_bruto').value) > 0 && convertStringDouble(document.getElementById('op_parcela_fp_id_edit').value) > 0) {
                p = {
                    op_parcela_id: 0,
                    op_parcela_dias: (dias * -1),
                    op_parcela_vencimento: op_parcela_vencimento.format('DD/MM/YYYY'),
                    op_parcela_fp_id: document.getElementById('op_parcela_fp_id_edit').value,
                    op_parcela_op_id: 0,
                    op_parcela_valor: document.getElementById('op_parcela_valor').value,
                    op_parcela_obs: '',
                    op_parcela_saldo: '',
                    op_parcela_ret_inss: document.getElementById('op_parcela_ret_inss').value,
                    op_parcela_ret_issqn: document.getElementById('op_parcela_ret_issqn').value,
                    op_parcela_ret_irrf: document.getElementById('op_parcela_ret_irrf').value,
                    op_parcela_ret_pis: document.getElementById('op_parcela_ret_pis').value,
                    op_parcela_ret_cofins: document.getElementById('op_parcela_ret_cofins').value,
                    op_parcela_ret_csll: document.getElementById('op_parcela_ret_csll').value,
                    op_parcela_valor_bruto: document.getElementById('op_parcela_valor_bruto').value,
                    op_parcela_agrupamento: 0,
                    op_parcela_vencimento_alterado: op_parcela_vencimento.format('DD/MM/YYYY'),
                    op_parcela_numero: 0,
                    op_parcela_numero_total: 0,
                    op_parcela_label_forma_pgto: $('#op_parcela_fp_id_edit :selected').text(),
                };
                operacao.parcelas.push(p);

                //Ordenando parcelas
                operacao.parcelas.sort(function (a, b) { return a.op_parcela_dias - b.op_parcela_dias });
                //Atualizando números sequencias de parcelas
                for (let i = 0; i < operacao.parcelas.length; i++) {
                    operacao.parcelas[i].op_parcela_numero = i + 1;
                    operacao.parcelas[i].op_parcela_numero_total = operacao.parcelas.length;
                }

                //Limpando campos da tela
                document.getElementById('op_parcela_vencimento').value = '';
                document.getElementById('op_parcela_valor_bruto').value = '';
                document.getElementById('op_parcela_valor').value = '';
                document.getElementById('op_parcela_ret_irrf').value = '';
                document.getElementById('op_parcela_ret_inss').value = '';
                document.getElementById('op_parcela_ret_issqn').value = '';
                document.getElementById('op_parcela_ret_pis').value = '';
                document.getElementById('op_parcela_ret_cofins').value = '';
                document.getElementById('op_parcela_ret_csll').value = '';
                document.getElementById('op_parcela_obs').value = '';
                document.getElementById('op_parcela_numero').value = '';

                //Atualizar view
                atualizaViewParcelas();
            } else {
                alert('Data de Vencimento ou Valor Bruto são inválidos!');
            }
        }

        if (contexto == 'close') {
            for (let i = 0; i < operacao.parcelas.length; i++) {
                somatoriaRetencoes();
                $('#lista_parcelas').modal('hide'); //Fechar modal se estiver aberto
            }
        }


    }

    function gera_parcelas_dia_vencimento() {
        //Limpar parcelas atuais para nova geração
        operacao.parcelas.splice(0, operacao.parcelas.length);

        let valor_operacao = convertStringDouble(operacao.totais.op_totais_total_op);
        let cheque_csrf = document.getElementById('csrf').checked;
        let forma_pagamento_label = $('#op_parcela_fp_id :selected').text();
        let forma_pagamento = document.getElementById('op_parcela_fp_id').value;
        let parcelas = (document.getElementById('parcela_dia_vencimento').value).toString().replace('.', ',').split(',');
        let valor_bruto = valor_operacao / parcelas.length;
        let op_data = document.getElementById('op_data').value;        
        
        for (let i = 0; i < parcelas.length; i++) {
            let data = moment(op_data, 'DD/MM/YYYY', 'pt', true);
            p = {
                op_parcela_id: 0,
                op_parcela_dias: convertStringDouble(parcelas[i]),
                op_parcela_vencimento: data.add(convertStringDouble(parcelas[i]), 'd').format('DD/MM/YYYY'),
                op_parcela_fp_id: forma_pagamento,
                op_parcela_op_id: 0,
                op_parcela_valor: '',
                op_parcela_obs: '',
                op_parcela_saldo: '',
                op_parcela_ret_inss: '',
                op_parcela_ret_issqn: '',
                op_parcela_ret_irrf: '',
                op_parcela_ret_pis: '',
                op_parcela_ret_cofins: '',
                op_parcela_ret_csll: '',
                op_parcela_valor_bruto: convertDoubleString(valor_bruto),
                op_parcela_agrupamento: 0,
                op_parcela_vencimento_alterado: data.add(convertStringDouble(parcelas[i]), 'd').format('DD/MM/YYYY'),
                op_parcela_numero: (i + 1),
                op_parcela_numero_total: parcelas.length,
                op_parcela_label_forma_pgto: forma_pagamento_label,
            };

            //inss
            if (convertStringDouble(operacao.retencoes.op_ret_inss) > 0) {
                if (document.getElementById('ret_inss_parcela').checked == true) {
                    if (i == 0) {
                        p.op_parcela_ret_inss = operacao.retencoes.op_ret_inss;
                    }                    
                } else {
                    p.op_parcela_ret_inss = convertDoubleString(convertStringDouble(operacao.retencoes.op_ret_inss) / parcelas.length);
                }
            }
            //issqn
            if (convertStringDouble(operacao.retencoes.op_ret_issqn) > 0) {
                if (document.getElementById('ret_iss_parcela').checked == true) {
                    if (i == 0) {
                        p.op_parcela_ret_issqn = operacao.retencoes.op_ret_issqn;
                    }                    
                } else {
                    p.op_parcela_ret_issqn = convertDoubleString(convertStringDouble(operacao.retencoes.op_ret_issqn) / parcelas.length);
                }
            }
            //irrf
            if (convertStringDouble(operacao.retencoes.op_ret_irrf) > 0) {
                if (document.getElementById('ret_irrf_parcela').checked == true) {
                    if (i == 0) {
                        p.op_parcela_ret_irrf = operacao.retencoes.op_ret_irrf;
                    }                    
                } else {
                    p.op_parcela_ret_irrf = convertDoubleString(convertStringDouble(operacao.retencoes.op_ret_irrf) / parcelas.length);
                }
            }
            //csrf
            if (cheque_csrf == true) {
                if (valor_bruto > 215.05) {
                    p.op_parcela_ret_pis = convertDoubleString(valor_bruto * 0.65 / 100);
                    p.op_parcela_ret_cofins = convertDoubleString(valor_bruto * 3 / 100);
                    p.op_parcela_ret_csll = convertDoubleString(valor_bruto * 1 / 100);
                }
            }
            //valor parcela
            p.op_parcela_valor = convertDoubleString(valor_bruto - (convertStringDouble(p.op_parcela_ret_inss) + convertStringDouble(p.op_parcela_ret_issqn) + convertStringDouble(p.op_parcela_ret_irrf) + convertStringDouble(p.op_parcela_ret_pis) + convertStringDouble(p.op_parcela_ret_cofins) + convertStringDouble(p.op_parcela_ret_csll)));

            operacao.parcelas.push(p);
        }        
    }


    function convertDoubleString(vlr) {        
        vlr_str = vlr.toLocaleString("pt-BR", { style: "decimal", minimumFractionDigits: "2", maximumFractionDigits: "2" });

        return vlr_str;
    }

    function gera_parcelas_numero_parcelas() {
        //Limpar parcelas atuais para nova geração
        operacao.parcelas.splice(0, operacao.parcelas.length);

        let valor_operacao = convertStringDouble(operacao.totais.op_totais_total_op);
        let cheque_csrf = document.getElementById('csrf').checked;
        let forma_pagamento_label = $('#op_parcela_fp_id :selected').text();
        let forma_pagamento = document.getElementById('op_parcela_fp_id').value;
        let parcelas = convertStringDouble(document.getElementById('parcela_numero').value);
        let valor_bruto = valor_operacao / parcelas;
        let op_data = moment(document.getElementById('op_data').value, 'DD/MM/YYYY', 'pt', true);
        let recorrencia = document.getElementById('recorencia_n_parcelas').value;
        let data = moment(document.getElementById('data_primeira_parcela').value, 'DD/MM/YYYY', 'pt', true);

        for (let i = 0; i < parcelas; i++) {            
            p = {
                op_parcela_id: 0,
                op_parcela_dias: 0,
                op_parcela_vencimento: '',
                op_parcela_fp_id: forma_pagamento,
                op_parcela_op_id: 0,
                op_parcela_valor: '',
                op_parcela_obs: '',
                op_parcela_saldo: '',
                op_parcela_ret_inss: '',
                op_parcela_ret_issqn: '',
                op_parcela_ret_irrf: '',
                op_parcela_ret_pis: '',
                op_parcela_ret_cofins: '',
                op_parcela_ret_csll: '',
                op_parcela_valor_bruto: convertDoubleString(valor_bruto),
                op_parcela_agrupamento: 0,
                op_parcela_vencimento_alterado: '',
                op_parcela_numero: (i + 1),
                op_parcela_numero_total: parcelas,
                op_parcela_label_forma_pgto: forma_pagamento_label,
            };           

            //Vencimento
            if (i == 0) {
                p.op_parcela_vencimento = data.format('DD/MM/YYYY');
            } else {
                if (recorrencia == 'Semanal') {
                    p.op_parcela_vencimento = data.add(7, 'd').format('DD/MM/YYYY');
                }
                if (recorrencia == 'Quinzenal') {
                    p.op_parcela_vencimento = data.add(15, 'd').format('DD/MM/YYYY');
                }
                if (recorrencia == 'Mensal') {
                    p.op_parcela_vencimento = data.add(1, 'M').format('DD/MM/YYYY');
                }
                if (recorrencia == 'Bimestral') {
                    p.op_parcela_vencimento = data.add(2, 'M').format('DD/MM/YYYY');
                }
                if (recorrencia == 'Trimestral') {
                    p.op_parcela_vencimento = data.add(3, 'M').format('DD/MM/YYYY');
                }
                if (recorrencia == 'Semestral') {
                    p.op_parcela_vencimento = data.add(6, 'M').format('DD/MM/YYYY');
                }
                if (recorrencia == 'Anual') {
                    p.op_parcela_vencimento = data.add(1, 'y').format('DD/MM/YYYY');
                }
            }
            p.op_parcela_vencimento_alterado = p.op_parcela_vencimento;

            //Dias
            let duracao = moment.duration(op_data.diff(data));
            let dias = duracao.asDays();
            p.op_parcela_dias = (dias * -1);


            //inss
            if (convertStringDouble(operacao.retencoes.op_ret_inss) > 0) {
                if (document.getElementById('ret_inss_parcela').checked == true) {
                    if (i == 0) {
                        p.op_parcela_ret_inss = operacao.retencoes.op_ret_inss;
                    }
                } else {
                    p.op_parcela_ret_inss = convertDoubleString(convertStringDouble(operacao.retencoes.op_ret_inss) / parcelas.length);
                }
            }
            //issqn
            if (convertStringDouble(operacao.retencoes.op_ret_issqn) > 0) {
                if (document.getElementById('ret_iss_parcela').checked == true) {
                    if (i == 0) {
                        p.op_parcela_ret_issqn = operacao.retencoes.op_ret_issqn;
                    }
                } else {
                    p.op_parcela_ret_issqn = convertDoubleString(convertStringDouble(operacao.retencoes.op_ret_issqn) / parcelas.length);
                }
            }
            //irrf
            if (convertStringDouble(operacao.retencoes.op_ret_irrf) > 0) {
                if (document.getElementById('ret_irrf_parcela').checked == true) {
                    if (i == 0) {
                        p.op_parcela_ret_irrf = operacao.retencoes.op_ret_irrf;
                    }
                } else {
                    p.op_parcela_ret_irrf = convertDoubleString(convertStringDouble(operacao.retencoes.op_ret_irrf) / parcelas.length);
                }
            }
            //csrf
            if (cheque_csrf == true) {
                if (valor_bruto > 215.05) {
                    p.op_parcela_ret_pis = convertDoubleString(valor_bruto * 0.65 / 100);
                    p.op_parcela_ret_cofins = convertDoubleString(valor_bruto * 3 / 100);
                    p.op_parcela_ret_csll = convertDoubleString(valor_bruto * 1 / 100);
                }
            }
            //valor parcela
            p.op_parcela_valor = convertDoubleString(valor_bruto - (convertStringDouble(p.op_parcela_ret_inss) + convertStringDouble(p.op_parcela_ret_issqn) + convertStringDouble(p.op_parcela_ret_irrf) + convertStringDouble(p.op_parcela_ret_pis) + convertStringDouble(p.op_parcela_ret_cofins) + convertStringDouble(p.op_parcela_ret_csll)));

            operacao.parcelas.push(p);
        }
    }

    function edit_valores_parcela(id, vlr) {
        let valor_bruto = convertStringDouble(document.getElementById('op_parcela_valor_bruto').value);
        let inss = convertStringDouble(document.getElementById('op_parcela_ret_inss').value);
        let irrf = convertStringDouble(document.getElementById('op_parcela_ret_irrf').value);
        let iss = convertStringDouble(document.getElementById('op_parcela_ret_issqn').value);
        let pis = convertStringDouble(document.getElementById('op_parcela_ret_pis').value);
        let cofins = convertStringDouble(document.getElementById('op_parcela_ret_cofins').value);
        let csll = convertStringDouble(document.getElementById('op_parcela_ret_csll').value);

        decimal('op_parcela_valor_bruto', valor_bruto, '2', false);
        decimal('op_parcela_ret_inss', inss, '2', false);
        decimal('op_parcela_ret_irrf', irrf, '2', false);
        decimal('op_parcela_ret_issqn', iss, '2', false);
        decimal('op_parcela_ret_pis', pis, '2', false);
        decimal('op_parcela_ret_cofins', cofins, '2', false);
        decimal('op_parcela_ret_csll', csll, '2', false);
        
        decimal(id, vlr, '2', true);
        let valor_liquido = valor_bruto - inss - irrf - iss - pis - cofins - csll;
        document.getElementById('op_parcela_valor').value = valor_liquido.toLocaleString("pt-BR", { style: "decimal", minimumFractionDigits: "2", maximumFractionDigits: "2" });
    }

    function editRetencoes(id, vlr, contexto) {
        $('#modal_mensagem_retorno').modal('hide'); //Fechar modal se estiver aberto
        console.log(vlr);
        console.log(id);
        console.log(contexto);

        if (operacao.parcelas.length > 0) {
            if (contexto == 'confirmar') {
                document.getElementById('mensagem_retorno_label').innerHTML = "";
                document.getElementById('mensagem_retorno_label').innerHTML = "Alteração de Retenção";
                document.getElementById('mensagem_retorno_conteudo').innerHTML = "";
                document.getElementById('mensagem_retorno_conteudo').innerHTML = "<p>" + 'A operação possui parcelas informadas. Como deseja proceder com o valor informado?' + "</p>";
                document.getElementById('mensagem_retorno_conteudo').innerHTML += '<div class="row"><div class="col-12"><button type="button" class="btn btn-info" style="width: 100%;margin-bottom: 10px;" onclick="editRetencoes(\'' + id + '\',\'' + vlr + '\',\'confirmadoDiluir\')">Distribuir o valor em todas as parcelas</button></div><div class="col-12"><button type="button" class="btn btn-info" style="width: 100%;margin-bottom: 10px;" onclick="editRetencoes(\'' + id + '\',\'' + vlr + '\',\'confirmadoPrimeira\')">Descontar na primeira parcela</button></div></div>';
                document.getElementById('mensagem_retorno_rodape').innerHTML = "";
                $('#modal_mensagem_retorno').modal('show');
            }

            if (contexto != 'confirmar') {
                for (let i = 0; i < operacao.parcelas.length; i++) {

                    if (contexto == 'confirmadoDiluir') {
                        if (id == 'op_ret_inss') {
                            operacao.parcelas[i].op_parcela_ret_inss = convertDoubleString((convertStringDouble(vlr) / operacao.parcelas.length));
                        }
                        if (id == 'op_ret_issqn') {
                            operacao.parcelas[i].op_parcela_ret_issqn = convertDoubleString((convertStringDouble(vlr) / operacao.parcelas.length));
                        }
                        if (id == 'op_ret_irrf') {
                            operacao.parcelas[i].op_parcela_ret_irrf = convertDoubleString((convertStringDouble(vlr) / operacao.parcelas.length));
                        }
                    }

                    if (contexto == 'confirmadoPrimeira') {
                        if (i == 0) {
                            if (id == 'op_ret_inss') {
                                operacao.parcelas[0].op_parcela_ret_inss = convertDoubleString((convertStringDouble(vlr)));
                            }
                            if (id == 'op_ret_issqn') {
                                operacao.parcelas[0].op_parcela_ret_issqn = convertDoubleString((convertStringDouble(vlr)));
                            }
                            if (id == 'op_ret_irrf') {
                                operacao.parcelas[0].op_parcela_ret_irrf = convertDoubleString((convertStringDouble(vlr)));
                            }
                        } else {
                            if (id == 'op_ret_inss') {
                                operacao.parcelas[i].op_parcela_ret_inss = convertDoubleString(0);
                            }
                            if (id == 'op_ret_issqn') {
                                operacao.parcelas[i].op_parcela_ret_issqn = convertDoubleString(0);
                            }
                            if (id == 'op_ret_irrf') {
                                operacao.parcelas[i].op_parcela_ret_irrf = convertDoubleString(0);
                            }
                        }
                    }
                    
                    let inss = convertStringDouble(operacao.parcelas[i].op_parcela_ret_inss);
                    let iss = convertStringDouble(operacao.parcelas[i].op_parcela_ret_issqn);
                    let ir = convertStringDouble(operacao.parcelas[i].op_parcela_ret_irrf);
                    let pis = convertStringDouble(operacao.parcelas[i].op_parcela_ret_pis);
                    let cofins = convertStringDouble(operacao.parcelas[i].op_parcela_ret_cofins);
                    let csll = convertStringDouble(operacao.parcelas[i].op_parcela_ret_csll);
                    let valor_bruto = convertStringDouble(operacao.parcelas[i].op_parcela_valor_bruto);

                    operacao.parcelas[i].op_parcela_valor = convertDoubleString(valor_bruto - inss - iss - ir - pis - cofins - csll);
                }
            }

            somatoriaRetencoes();

            decimal(id, convertStringDouble(vlr), '2', true);

        } else {
            decimal(id, convertStringDouble(vlr), '2', true);
        }

        //atualizando retenções
        if (id == 'op_ret_inss') {
            operacao.retencoes.op_ret_inss = convertDoubleString(convertStringDouble(vlr));            
        }
        if (id == 'op_ret_issqn') {
            operacao.retencoes.op_ret_issqn = convertDoubleString(convertStringDouble(vlr));
        }
        if (id == 'op_ret_irrf') {
            operacao.retencoes.op_ret_irrf = convertDoubleString(convertStringDouble(vlr));
        }
    }

    function somatoriaRetencoes() {

        let inss = 0;
        let iss = 0;
        let ir = 0;
        let pis = 0;
        let cofins = 0;
        let csll = 0;        

        for (let i = 0; i < operacao.parcelas.length; i++) {
            inss += convertStringDouble(operacao.parcelas[i].op_parcela_ret_inss);
            iss += convertStringDouble(operacao.parcelas[i].op_parcela_ret_issqn);
            ir += convertStringDouble(operacao.parcelas[i].op_parcela_ret_irrf);
            pis += convertStringDouble(operacao.parcelas[i].op_parcela_ret_pis);
            cofins += convertStringDouble(operacao.parcelas[i].op_parcela_ret_cofins);
            csll += convertStringDouble(operacao.parcelas[i].op_parcela_ret_csll);
        }

        decimal('op_ret_inss', inss, '2', false);
        decimal('op_ret_issqn', iss, '2', false);
        decimal('op_ret_irrf', ir, '2', false);
        decimal('op_ret_pis', pis, '2', false);
        decimal('op_ret_cofins', cofins, '2', false);
        decimal('op_ret_csll', csll, '2', false);

        //atribuir as retenções das parcelas em retenções objeto
        operacao.retencoes.op_ret_inss = convertDoubleString(inss);
        operacao.retencoes.op_ret_issqn = convertDoubleString(iss);
        operacao.retencoes.op_ret_irrf = convertDoubleString(ir);
        operacao.retencoes.op_ret_pis = convertDoubleString(pis);
        operacao.retencoes.op_ret_cofins = convertDoubleString(cofins);
        operacao.retencoes.op_ret_csll = convertDoubleString(csll);


        let txt = '';
        let soma = 0;

        if (convertStringDouble(operacao.retencoes.op_ret_inss) > 0) {
            txt += 'INSS: ' + operacao.retencoes.op_ret_inss + ' ';
            soma += convertStringDouble(operacao.retencoes.op_ret_inss);
        }
        if (convertStringDouble(operacao.retencoes.op_ret_issqn) > 0) {
            txt += 'ISSQN: ' + operacao.retencoes.op_ret_issqn + ' ';
            soma += convertStringDouble(operacao.retencoes.op_ret_issqn);
        }
        if (convertStringDouble(operacao.retencoes.op_ret_irrf) > 0) {
            txt += 'IRRF: ' + operacao.retencoes.op_ret_irrf + ' ';
            soma += convertStringDouble(operacao.retencoes.op_ret_irrf);
        }
        if (convertStringDouble(operacao.retencoes.op_ret_pis) > 0) {
            txt += 'PIS: ' + operacao.retencoes.op_ret_pis + ' ';
            soma += convertStringDouble(operacao.retencoes.op_ret_pis);
        }
        if (convertStringDouble(operacao.retencoes.op_ret_cofins) > 0) {
            txt += 'COFINS: ' + operacao.retencoes.op_ret_cofins + ' ';
            soma += convertStringDouble(operacao.retencoes.op_ret_cofins);
        }
        if (convertStringDouble(operacao.retencoes.op_ret_csll) > 0) {
            txt += 'CSLL: ' + operacao.retencoes.op_ret_csll + ' ';
            soma += convertStringDouble(operacao.retencoes.op_ret_csll);
        }

        if (soma > 0) {
            document.getElementById('retencoes').value = txt;
        } else {
            document.getElementById('retencoes').value = 'Não informado';
        }
    }



    
</script>